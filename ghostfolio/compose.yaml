version: "3.7"
services:
  broker:
    image: redis:alpine
    container_name: ghostfolio-redis
    restart: always
    command:
      - redis-server
      - --requirepass
      - ${REDIS_PASSWORD}
    volumes:
      - ${VOLUME_DIR}/redis:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test:
        - CMD-SHELL
        - redis-cli --pass ${REDIS_PASSWORD} ping | grep PONG
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ghostfolio
  db:
    image: postgres:15
    container_name: ghostfolio-postgresdb
    restart: always
    volumes:
      - ${VOLUME_DIR}/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ghostfolio
  webserver:
    image: ghostfolio/ghostfolio:latest
    container_name: ghostfolio
    restart: always
    depends_on:
      - db
      - broker
    ports:
      - 5517:3333
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?connect_timeout=300&sslmode=prefer
      NODE_ENV: production
      REDIS_HOST: broker
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ACCESS_TOKEN_SALT: ${ACCESS_TOKEN_SALT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://localhost:3333/api/v1/health
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ghostfolio
networks:
  ghostfolio: {}
volumes:
  postgres: null
